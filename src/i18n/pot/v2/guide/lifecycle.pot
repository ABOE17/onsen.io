#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"POT-Creation-Date: 2017-06-29 19:56+0000\n"
"Plural-Forms: \n"

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/lifecycle.html:1
msgid ""
"title: 'Page Lifecycle'\n"
"order: 150\n"
"tocGroup: guide"
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/lifecycle.html:2
msgid "layout: docs.html.eco"
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/lifecycle.html:3
msgid "<%- @markdown => %>"
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/lifecycle.html:4
msgid "Page Lifecycle"
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/lifecycle.html:5
msgid ""
"Due to the asynchronous nature of JavaScript and animations, Onsen UI "
"provides `ons-page` life cycle to perform actions at the right time. "
"Loading data, updating the view, saving data before destroying... all of "
"these and more actions are examples of what can be done thanks to page's "
"life cycle."
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/lifecycle.html:6
msgid "Events"
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/lifecycle.html:7
msgid ""
"`<ons-page>` provides a set of DOM events that will be fired in unique and "
"set times of its life cycle. Use these events to alter the behavior on each "
"page."
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/lifecycle.html:10
msgid ""
"**`init` event** is fired after `<ons-page>` is attached to DOM. Use this "
"event to initialize the code or dynamic content of a page when it is "
"created (before it is shown)."
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/lifecycle.html:13
msgid ""
"**`destroy` event** is fired before `<ons-page>` is destroyed and prior to "
"DOM detachment. Use this event to clean up or save anything you need."
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/lifecycle.html:16
msgid ""
"**`show` event** is fired every time `<ons-page>` comes into view, i.e. "
"when a new page is created and shown immediately or when an existing page "
"shows up. Use this event to run code every time a page appears."
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/lifecycle.html:19
msgid ""
"**`hide` event** is fired every time `<ons-page>` disappears from view, "
"i.e. when a visible page is destroyed or is hidden but still exists in the "
"page stack. Use this event to run code every time a page disappears."
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/lifecycle.html:23
msgid ""
"Page lifecycle events will be propagated to the page’s descendants so they "
"are correspondingly shown, hidden, or destroyed. For example, destroying "
"`<ons-navigator>` will throw hide event only for the displayed page "
"(navigator’s top page) and destroy event for every page in navigator’s page "
"stack."
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/lifecycle.html:24
msgid ""
"Since lifecycle events are normal DOM events and bubble up, you can add a "
"listener to the document or any parent element of the page. The event "
"object contains a reference to the page itself (`event.target`)."
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/lifecycle.html:25
msgid ""
"<ons-page id=\"page1\">This is a blank page</ons-page>\n"
"\n"
"<script>\n"
"document.addEventListener('init', function(event) {\n"
"  if (event.target.matches('#page1')) {\n"
"    ons.notification.alert('Page 1 is initiated.');\n"
"    // Set up content...\n"
"  }\n"
"}, false);\n"
"</script>"
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/lifecycle.html:26
msgid "Hooks"
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/lifecycle.html:27
msgid ""
"Since v2.4.0 and thanks to the support for native `<template>` elements, "
"lifecycle hooks are also available. Hooks are run at the same time as the "
"corresponding events:"
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/lifecycle.html:28
msgid ""
"<template id=\"page1.html\">\n"
"  <ons-page id=\"page1\">\n"
"    <ons-toolbar>\n"
"      <div class=\"center\"></div>\n"
"    </ons-toolbar>\n"
"    <!-- More content here -->\n"
"\n"
"    <script>\n"
"      document.querySelector('#page1').onInit = function() {\n"
"        // Set up page's content or anything else\n"
"        this.querySelector('ons-toolbar .center').innerHTML = 'Title';\n"
"\n"
"        this.onShow = function() { ... };\n"
"        this.onHide = function() { ... };\n"
"        this.onDestroy = function() { ... };\n"
"      };\n"
"    </script>\n"
"  </ons-page>\n"
"</template>"
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/lifecycle.html:29
msgid ""
"Keep in mind that there can only be 1 root node per template (an "
"`ons-page`). Optionally, `<template>` elements allow `<script></script>` "
"tags inside that run when the element is created and attached to the DOM."
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/lifecycle.html:31
msgid ""
" This script is evaluated in the global scope and anything that you write "
"here might affect any other part of your app. For example, variables "
"declared in this script will pollute the global scope unless it is wrapped "
"inside a closure."
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/lifecycle.html:33
msgid ""
"  In the previous example, `ons-page` has `id=\"page1\"` and it can be used "
"to find the element and modify its `onInit` hook. Hook functions are bound "
"to the page element so you can use `this`. Beware of, if you give an ID to "
"the page, you should only create 1 instance of this page. Otherwise, use "
"class or custom attributes."
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/lifecycle.html:34
msgid ""
"  It is up to the developer choosing between events or hooks. Events allow "
"separating the view from the logic while hooks provide a more compact "
"approach."
msgstr ""