#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"POT-Creation-Date: 2017-09-01 01:26+0000\n"
"Plural-Forms: \n"

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/cordova.html:1
msgid ""
"title: 'Cordova-specific Features'\n"
"order: 170\n"
"tocGroup: guide"
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/cordova.html:2
msgid "layout: docs.html.eco"
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/cordova.html:3
msgid "<%- @markdown => %>"
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/cordova.html:4
msgid "Cordova-specific Features"
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/cordova.html:5
msgid ""
"Onsen UI fits well with hybrid app development. This section covers some "
"gotchas when developing a Cordova app."
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/cordova.html:6
msgid "Handling 'deviceready' event"
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/cordova.html:7
msgid ""
"Cordova APIs can be called after `deviceready` event is fired. In Onsen UI, "
"`ons.ready()` function can be used to identify the event."
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/cordova.html:8
msgid ""
"ons.ready(function() {\n"
"  // deviceready event is fired\n"
"  // Call whatever Cordova APIs\n"
"});"
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/cordova.html:9
msgid "Device Back Button"
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/cordova.html:10
msgid ""
"For Android devices, Cordova fires a `backbutton` event on hardware back "
"button. It is important to understand that this event is fired by Cordova "
"so it requires `cordova.js` file or similars (`loader.js` in Monaca) to be "
"included in the app."
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/cordova.html:12
msgid "On desktop browsers you can simulate a `backbutton` event by pressing ESC."
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/cordova.html:14
msgid ""
"Onsen UI sets handlers with default behavior for Android back button in "
"certain elements:"
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/cordova.html:17
msgid "Dialogs: Closes the dialog if it’s cancelable (except Modals and Toasts)."
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/cordova.html:20
msgid "Navigator: Pops a page if the page stack is not empty."
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/cordova.html:23
msgid "Splitter: Closes the menu if it’s open."
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/cordova.html:26
msgid ""
"If the conditions are not met, these elements will call the parent "
"element’s handler. The final global handler closes the app."
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/cordova.html:30
msgid ""
"While this is probably the desired behavior for many apps, Onsen UI allows "
"modifying these handlers for better customization. To change the app global "
"handler (closing the app), the [`ons` object](../api/js/ons.html) provides "
"a few methods:"
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/cordova.html:31
msgid ""
"// Disable or enable\n"
"ons.disableDeviceBackButtonHandler();\n"
"ons.enableDeviceBackButtonHandler();\n"
"\n"
"// Set a new handler\n"
"ons.setDefaultDeviceBackButtonListener(function(event) {\n"
"  ons.notification.confirm('Do you want to close the app?') // Ask for "
"confirmation\n"
"    .then(function(index) {\n"
"      if (index === 1) { // OK button\n"
"        navigator.app.exitApp(); // Close the app\n"
"      }\n"
"    });\n"
"});"
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/cordova.html:32
msgid ""
"Apart from this, the mentioned elements together with `ons-page` element "
"expose a way to modify their own handler:"
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/cordova.html:33
msgid ""
"var myNavigator = document.getElementById('my-navigator');\n"
"myNavigator.onDeviceBackButton.disable(); // Disables back button handler\n"
"myNavigator.onDeviceBackButton.enable(); // Enables back button handler\n"
"myNavigator.onDeviceBackButton.isEnabled(); // Returns true if enabled\n"
"myNavigator.onDeviceBackButton.destroy(); // Destroys the current handler\n"
"\n"
"var page = myNavigator.topPage;\n"
"page.onDeviceBackButton = function(event) {\n"
"  console.log('Hardware back button!');\n"
"  event.callParentHandler(); // Calls the parent handler (navigator handler "
"in this case)\n"
"};"
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/cordova.html:34
msgid ""
"The `event` object provided to this handler also contains a "
"`event.callParentHandler()` method."
msgstr ""

#: /Users/masahiro/Data/onsen.io/src/documents_en/v2/guide/cordova.html:35
msgid "<% end %>"
msgstr ""