---
author: atsushi
date: 2016-11-16
id: monaca-cli-transpile
title: "New function added to Monaca CLI "transpile""
product: monaca
tags: monaca, cli
category: monaca cli
---

Monaca CLI is a command-line tool which makes local development of Monaca App easier. Recently, a new function called "transpile" has been added to Monaca CLI. transpile currently supports Angular2/React App.

We will explain in details about transpile option.

## Installation of Monaca CLI

To use Monaca CLI, Node.js is required. After installing Node.js, use "npm" command in the command prompt to install Monaca as following.

```
$ npm install monaca -g
```

## Usage

transpile is an option which has been used to switch between codes. Basically, it is being used in React or Angular2 project which is not written in EcmaScript5. An example for React project, select the category 'Onsen UI and React' and then choose the desired template as following:

```
$ monaca create react_monaca
? Choose a category: 
  Onsen UI 
  Onsen UI and Angular 1 
  Onsen UI and Angular 2 
❯ Onsen UI and React 
  Ionic 
  No Framework 
  Sample Apps
```

"src" directory has been created. The React app source code has been stored in this directory.

```
$ tree src/
src/
├── App.jsx
├── HomePage.jsx
├── SettingsPage.jsx
├── main.jsx
└── public
    └── index.ejs

1 directory, 5 files
```

It is written as jsx as above. This could not be used as Monaca App without transcripting into EcmaScript5; therefore, transpile is applied below.

### transpile usage

Running the following monaca command will make transpile executed at the same time.

- monaca upload
- monaca preview
- monaca serve
- monaca debug
- monaca remote build

transpile is being executed automatically in monaca command. To execute transpile alone, follow the command below. However, Web Font and Javascript, stylesheet will be compacted.

```
$ monaca transpile
Running Transpiler...
Build completed in 13.312s

Time: 13314ms
                                                                    Asset       Size  Chunks             Chunk Names
                     assets/ionicons.aff28a207631f39ee0272d5cdde43ee7.svg     334 kB          [emitted]  
          assets/fontawesome-webfont.25a32416abee198dd821b0b17a198a8f.eot    76.5 kB          [emitted]  
         assets/fontawesome-webfont.c8ddf1e5e5bf3682bc7bebf30f394148.woff    90.4 kB          [emitted]  
          assets/fontawesome-webfont.1dc35d25e61d819a9c357074014867ab.ttf     153 kB          [emitted]  
          assets/fontawesome-webfont.d7c639084f684d66a1bc66855d193ed8.svg     392 kB          [emitted]  
                     assets/ionicons.19e65b89cee273a249fba4c09b951b74.eot     121 kB          [emitted]  
                     assets/ionicons.dd4781d1acc57ba4c4808d1b44301201.ttf     189 kB          [emitted]  
                    assets/ionicons.2c159d0d05473040b53ec79df8797d32.woff    67.9 kB          [emitted]  
        assets/fontawesome-webfont.e6cf7c6ec7c2d6f670ae9d762604cb0b.woff2    71.9 kB          [emitted]  
assets/Material-Design-Iconic-Font.a4d31128b633bc0b1cc1f18a34fb3851.woff2    38.4 kB          [emitted]  
 assets/Material-Design-Iconic-Font.d2a55d331bdd1a7ea97a8a1fbb3c569c.woff    50.3 kB          [emitted]  
  assets/Material-Design-Iconic-Font.b351bd62abcd96e924d9f44a3da169a7.ttf    99.2 kB          [emitted]  
                                                            app.bundle.js    88.1 kB       0  [emitted]  app
                                                         vendor.bundle.js     454 kB       1  [emitted]  vendor
                                                                  app.css     126 kB       0  [emitted]  app
                                                               index.html  620 bytes          [emitted]  


Transpiling finished for /path_to/react_monaca
```

If command is successfully executed, these files will be placed under www directory. This means files are being generated to be used as Monaca App.

www/index.html will also be generated with the following simple code which includes Javascript/CSS file into the page.

```
$ cat www/index.html 
<!DOCTYPE html> <html> <head> <meta charset=utf-8> <meta name=viewport content="width=device-width,initial-scale=1,maximum-scale=1,user-scalable=no"> <meta http-equiv=Content-Security-Policy content="default-src * data:; style-src * 'unsafe-inline'; script-src * 'unsafe-inline' 'unsafe-eval'"> <script type=text/javascript src=components/loader.js></script> <link rel=stylesheet type=text/css href=components/loader.css> <link href=app.css rel=stylesheet></head> <body> <div id=app></div> <script type=text/javascript src=vendor.bundle.js></script><script type=text/javascript src=app.bundle.js></script></body> </html>
```

Next, all you need to do is to create React or Angular2 App.

![](/blog/content/images/2016/Nov/monaca-react-preview.png)

----

gulp or WebPack could also be used as transpile environment; however, it consumes a lot of time. In this case, we recommend using Monaca to create the hybrid app easily.

※ In order to use Monaca CLI, please subscribe to a valid plan.

[Monaca CLI command - Monaca Docs](https://docs.monaca.io/en/manual/development/monaca_cli/cli_commands/#monaca-transpile)
